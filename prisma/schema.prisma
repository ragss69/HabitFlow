// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Goal {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String
  icon        String
  isDefault   Boolean  @default(false)
  goalType    String   @default("quantitative") // 'quantitative' | 'checklist'
  unit        String?  // For quantitative goals
  targetPerDay Int?    // For quantitative goals
  checklistItems String? // JSON string for checklist items
  completionLogic String @default("all") // 'all' | 'any' for checklist goals
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      String

  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  components  Component[]
  entries     Entry[]
  streak      Streak?

  @@map("goals")
}

model Component {
  id        String   @id @default(cuid())
  goalId    String
  name      String
  type      String // 'boolean' | 'number' | 'text' | 'select'
  config    String  // JSON string
  order     Int
  createdAt DateTime @default(now())

  goal Goal @relation(fields: [goalId], references: [id], onDelete: Cascade)

  @@map("components")
}

model Entry {
  id        String   @id @default(cuid())
  goalId    String
  date      DateTime
  data      String   // JSON string
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  goal Goal @relation(fields: [goalId], references: [id], onDelete: Cascade)

  @@map("entries")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String   // Added name field
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  goals Goal[]

  @@map("users")
}

model Streak {
  id             String   @id @default(cuid())
  goalId         String   @unique
  currentStreak  Int      @default(0)
  longestStreak  Int      @default(0)
  lastEntryDate  DateTime?
  updatedAt      DateTime @updatedAt

  goal Goal @relation(fields: [goalId], references: [id], onDelete: Cascade)

  @@map("streaks")
}
